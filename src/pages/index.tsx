import Head from "next/head";
import { useAuth, SignIn } from "@clerk/nextjs";
import { api } from "~/utils/api";
import Spinner from "../components/Spinner";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
  DialogFooter
} from "../components/ui/dialog"
import { Button } from "../components/ui/button"
import { Input } from "../components/ui/input"
import { Label } from "../components/ui/label"
import { useState } from "react";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "../components/ui/select"
import { RadioGroup, RadioGroupItem } from "../components/ui/radio-group"

export default function Home() {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });
  const { isLoaded, isSignedIn, userId } = useAuth();
  const [formItemName, setFormItemName] = useState<string>('');
  const userItemsQuery = api.user.fetchUserData.useQuery();

  if (!isLoaded) {
    return <Spinner />;
  }

  if (!isSignedIn || !userId) {
    return (<div className="flex min-h-screen items-center justify-center"><SignIn /></div>)
  }

  if (userItemsQuery.isLoading) {
    return <Spinner />;
  }

  const userItems = userItemsQuery.data?.items;


  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen items-center justify-center">
        <div className="justify-center items-center flex container">
          <Dialog>
            <DialogTrigger asChild>
              <Button variant="outline">Add Item</Button>
            </DialogTrigger>
            <DialogContent className="sm:max-w-[425px]">
              <DialogHeader>
                <DialogTitle>Add Item</DialogTitle>
                <DialogDescription>
                  Add a new item. Click save.
                </DialogDescription>
              </DialogHeader>
              <div className="grid gap-4 py-4">

                <div className="grid grid-cols-4 items-center gap-4">
                  <Label htmlFor="name" className="text-right">
                    Name
                  </Label>
                  <Input id="name" value={formItemName} onChange={(e) => setFormItemName(e.currentTarget.value)} className="col-span-3" />
                </div>

                <div className="grid grid-cols-4 items-center gap-4">
                  <Label htmlFor="type" className="text-right">
                    Type
                  </Label>
                  <Select>
                    <SelectTrigger className="col-span-3">
                      <SelectValue placeholder="Select a type" />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="time">Time</SelectItem>
                      <SelectItem value="duration">Duration</SelectItem>
                      <SelectItem value="amount">Amount</SelectItem>
                      <SelectItem value="consistency">consistency</SelectItem>
                    </SelectContent>
                  </Select>
                </div>

                <div className="grid grid-cols-4 items-center gap-4">
                  <Label htmlFor="direction" className="text-right">
                    Direction
                  </Label>
                  <RadioGroup defaultValue="increase" className="flex flex-row col-span-3 ml-2">
                    <div className="flex items-center space-x-2">
                      <RadioGroupItem value="increase" id="increase" />
                      <Label htmlFor="increase">Increase</Label>
                    </div>
                    <div className="flex items-center space-x-2">
                      <RadioGroupItem value="decrease" id="decrease" />
                      <Label htmlFor="decrease">Decrease</Label>
                    </div>
                  </RadioGroup>
                </div>
              </div>

              <DialogFooter>
                <Button type="button">Cancel</Button>
                <Button type="submit">Add</Button>
              </DialogFooter>
            </DialogContent>
          </Dialog>

        </div>
      </main>
    </>
  );
}
